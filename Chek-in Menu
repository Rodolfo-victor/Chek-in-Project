import React, { useState, useEffect } from 'react';
import { View, Text, Button, Switch, StyleSheet } from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import MapView, { Marker } from 'react-native-maps';
import * as Location from 'expo-location';

const Stack = createStackNavigator();

// Tela do Menu Principal
function MenuScreen({ navigation }) {
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Menu</Text>
      <Button
        title="Check-in"
        onPress={() => navigation.navigate('Check-in')}
      />
      <Button
        title="Rotas do Ônibus"
        onPress={() => navigation.navigate('Rotas do Ônibus')}
        style={styles.button}
      />
      <Button
        title="Configurações"
        onPress={() => navigation.navigate('Configurações')}
        style={styles.button}
      />
    </View>
  );
}

// Tela de Check-in
function CheckinScreen({ navigation }) {
  const [checkedIn, setCheckedIn] = useState(false);

  const handleCheckIn = () => {
    setCheckedIn(true);
    alert('Check-in realizado com sucesso!');
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Check-in</Text>
      <Button title="Realizar Check-in" onPress={handleCheckIn} />
      {checkedIn && <Text style={styles.success}>Você fez o check-in!</Text>}
    </View>
  );
}

// Tela de Rotas do Ônibus
function BusRouteScreen() {
  const [location, setLocation] = useState(null);
  const [errorMsg, setErrorMsg] = useState(null);

  useEffect(() => {
    (async () => {
      let { status } = await Location.requestForegroundPermissionsAsync();
      if (status !== 'granted') {
        setErrorMsg('Permissão para acessar localização foi negada.');
        return;
      }

      let currentLocation = await Location.getCurrentPositionAsync({});
      setLocation(currentLocation);
    })();
  }, []);

  const busStops = [
    { id: 1, title: 'Ponto de Embarque', lat: -23.55052, lng: -46.633308 },
    { id: 2, title: 'Ponto de Desembarque', lat: -23.559616, lng: -46.658928 },
  ];

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Rotas do Ônibus</Text>
      {location ? (
        <MapView
          style={styles.map}
          initialRegion={{
            latitude: location.coords.latitude,
            longitude: location.coords.longitude,
            latitudeDelta: 0.05,
            longitudeDelta: 0.05,
          }}
        >
          {busStops.map((stop) => (
            <Marker
              key={stop.id}
              coordinate={{ latitude: stop.lat, longitude: stop.lng }}
              title={stop.title}
            />
          ))}
        </MapView>
      ) : (
        <Text>Carregando localização...</Text>
      )}
    </View>
  );
}

// Tela de Configurações
function SettingsScreen() {
  const [notificationsEnabled, setNotificationsEnabled] = useState(false);

  const toggleSwitch = () => setNotificationsEnabled((previousState) => !previousState);

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Configurações</Text>
      <View style={styles.switchContainer}>
        <Text>Notificações</Text>
        <Switch
          trackColor={{ false: '#767577', true: '#81b0ff' }}
          thumbColor={notificationsEnabled ? '#f5dd4b' : '#f4f3f4'}
          onValueChange={toggleSwitch}
          value={notificationsEnabled}
        />
      </View>
    </View>
  );
}

// Função principal
export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="Menu">
        <Stack.Screen name="Menu" component={MenuScreen} />
        <Stack.Screen name="Check-in" component={CheckinScreen} />
        <Stack.Screen name="Rotas do Ônibus" component={BusRouteScreen} />
        <Stack.Screen name="Configurações" component={SettingsScreen} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

// Estilos
const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  success: {
    marginTop: 20,
    color: 'green',
    fontSize: 18,
  },
  map: {
    width: '100%',
    height: '80%',
  },
  switchContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    width: '80%',
    marginTop: 20,
  },
  button: {
    marginVertical: 10,
  },
});
